# default.conf
# ATS Game Server Web Interface Nginx Configuration
# Handles HTTPS with fallback, game server management, and API endpoints

# HTTP Server - Redirect to HTTPS and handle ACME challenges
server {
    listen 80;
    listen [::]:80;
    server_name ats.7gram.xyz;
    
    # ACME Challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server - Main ATS Web Interface
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ats.7gram.xyz;
    
    # Include SSL configuration
    include /etc/nginx/conf.d/ssl.conf;
    
    # Document root for ATS web interface
    root /var/www/ats;
    index index.html index.htm index.php;
    
    # Logging
    access_log /var/log/nginx/ats-access.log combined;
    error_log /var/log/nginx/ats-error.log warn;
    
    # Security Headers (additional to ssl.conf)
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # Main location - ATS Web Interface
    location / {
        try_files $uri $uri/ @fallback;
        
        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "static";
        }
    }
    
    # Fallback to index.html for single-page applications
    location @fallback {
        try_files /index.html =404;
    }
    
    # ATS Server Management API
    location /api/ {
        proxy_pass http://ats-server:8080/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for game server communication
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # WebSocket connection for real-time server status
    location /ws/ {
        proxy_pass http://ats-server:8080/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }
    
    # Server status and monitoring
    location /status {
        proxy_pass http://ats-server:8080/status;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache status for 30 seconds
        proxy_cache_valid 200 30s;
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Metrics endpoint for monitoring
    location /metrics {
        proxy_pass http://ats-server:8080/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Restrict access (optional - remove if not needed)
        # allow 127.0.0.1;
        # allow 10.0.0.0/8;
        # deny all;
    }
    
    # Game server logs viewer
    location /logs {
        proxy_pass http://ats-server:8080/logs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Authentication required for logs
        auth_basic "ATS Server Logs";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
    
    # File upload for mods/saves
    location /upload {
        proxy_pass http://ats-server:8080/upload;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increase upload size for game files
        client_max_body_size 100M;
        proxy_request_buffering off;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(ini|conf|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Health check for load balancer
    location /health {
        access_log off;
        return 200 "ATS Server OK\n";
        add_header Content-Type text/plain;
    }
    
    # Robots.txt to prevent indexing
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }
    
    # Favicon handling
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
    }
}

# Additional server block for www redirect (optional)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.ats.7gram.xyz;
    
    # Include SSL configuration
    include /etc/nginx/conf.d/ssl.conf;
    
    # Redirect to non-www
    return 301 https://ats.7gram.xyz$request_uri;
}
