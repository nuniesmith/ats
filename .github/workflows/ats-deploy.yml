---
# ATS Game Server Deployment using Shared Deploy Workflow
#
# Required GitHub Secrets:
# - ATS_ROOT_PASSWORD: Root password for ATS server
# - LINODE_CLI_TOKEN: Linode API token for server management
# - ACTIONS_USER_PASSWORD: Password for actions user account (optional)
# - JORDAN_PASSWORD: Password for jordan user account (optional)
# - TS_OAUTH_CLIENT_ID: Tailscale OAuth client ID
# - TS_OAUTH_SECRET: Tailscale OAuth client secret
# - TAILSCALE_TAILNET: Tailscale tailnet name (optional)
# - CLOUDFLARE_API_TOKEN: Cloudflare API token for DNS management
# - CLOUDFLARE_ZONE_ID: Cloudflare zone ID
# - ADMIN_EMAIL: Admin email for monitoring/alerts (optional)
#
# This workflow deploys an ATS game server with:
# - Linode server provisioning (Arch Linux)
# - Stage 0: Preflight validation on GitHub runner
# - Stage 1: Arch Linux setup and Docker installation
# - Stage 2: Tailscale OAuth authentication via systemd service
# - Cloudflare DNS updates with Tailscale IP
# - Docker containerization
#
name: üöÄ Deploy ATS Game Server

on:
  push:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      action_type:
        description: 'Action to perform'
        required: true
        type: choice
        options:
          - 'deploy'
          - 'destroy'
          - 'health-check'
          - 'restart'
        default: 'deploy'
      
      target_region:
        description: 'Linode region'
        required: false
        type: choice
        options:
          - 'ca-central'
          - 'us-east'
          - 'us-west'
          - 'eu-west'
        default: 'ca-central'
      
      server_type:
        description: 'Linode server type'
        required: false
        type: choice
        options:
          - 'g6-nanode-1'          # 1GB RAM - $5/month (sufficient for lightweight game server)
          - 'g6-standard-1'        # 2GB RAM - $12/month
          - 'g6-standard-2'        # 4GB RAM - $20/month
          - 'g6-standard-4'        # 8GB RAM - $40/month
        default: 'g6-nanode-1'
      
      overwrite_server:
        description: 'Destroy and recreate server (use with caution)'
        required: false
        type: boolean
        default: false
      
      skip_docker_build:
        description: 'Skip building Docker images'
        required: false
        type: boolean
        default: false
      
      confirm_destruction:
        description: 'Type "DESTROY" to confirm destruction'
        required: false
        type: string

jobs:
  # ATS Game Server Deployment using Shared Workflow
  deploy-ats:
    name: üéÆ Deploy ATS Game Server
    uses: nuniesmith/actions/.github/workflows/deploy.yml@main
    with:
      service_name: 'ats'
      action_type: ${{ inputs.action_type || 'deploy' }}
      server_type: ${{ inputs.server_type || 'g6-nanode-1' }}  # $5/month basic server - perfect for lightweight game server
      target_region: ${{ inputs.target_region || 'ca-central' }}
      domain_suffix: '7gram.xyz'
      overwrite_server: ${{ inputs.overwrite_server || false }}
    secrets:
      LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}
      SERVICE_ROOT_PASSWORD: ${{ secrets.ATS_ROOT_PASSWORD }}
      ACTIONS_USER_PASSWORD: ${{ secrets.ACTIONS_USER_PASSWORD }}
      JORDAN_PASSWORD: ${{ secrets.JORDAN_PASSWORD }}
      TS_OAUTH_CLIENT_ID: ${{ secrets.TS_OAUTH_CLIENT_ID }}
      TS_OAUTH_SECRET: ${{ secrets.TS_OAUTH_SECRET }}
      TAILSCALE_TAILNET: ${{ secrets.TAILSCALE_TAILNET }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}

  # Post-deployment summary
  deployment-summary:
    name: üìä ATS Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-ats]
    if: always()
    
    steps:
      - name: üìä Display ATS Deployment Summary
        env:
          ATS_SERVER_IP: ${{ needs.deploy-ats.outputs.server_ip }}
          ATS_SERVER_ID: ${{ needs.deploy-ats.outputs.server_id }}
          TAILSCALE_IP: ${{ needs.deploy-ats.outputs.tailscale_ip }}
          DEPLOYMENT_STATUS: ${{ needs.deploy-ats.outputs.deployment_status }}
          DEPLOY_RESULT: ${{ needs.deploy-ats.result }}
        run: |
          echo "üöÄ ATS Game Server Deployment Summary"
          echo "====================================="
          echo ""
          echo "üìä **Deployment Result:** $DEPLOY_RESULT"
          echo "üéØ **Action:** ${{ inputs.action_type || 'deploy' }}"
          echo ""
          
          if [[ "$DEPLOY_RESULT" == "success" ]]; then
            echo "üéÆ **ATS Game Server:**"
            echo "  ‚Ä¢ Server ID: ${ATS_SERVER_ID:-'Check workflow logs'}"
            echo "  ‚Ä¢ Public IP: ${ATS_SERVER_IP:-'Check workflow logs'}"
            echo "  ‚Ä¢ Tailscale IP: ${TAILSCALE_IP:-'Check workflow logs'}"
            echo "  ‚Ä¢ Server Type: ${{ inputs.server_type || 'g6-nanode-1' }} (1GB RAM)"
            echo "  ‚Ä¢ Operating System: Arch Linux"
            echo "  ‚Ä¢ Region: ${{ inputs.target_region || 'ca-central' }}"
            echo ""
            echo "üåê **DNS Configuration:**"
            echo "  ‚úÖ DNS records updated automatically by shared workflow"
            echo "  üîß Cloudflare integration with Tailscale IP updates"
            echo "  üìã Domain: ats.7gram.xyz ‚Üí $TAILSCALE_IP"
            echo ""
            echo "üîó **Access Methods:**"
            if [[ -n "$ATS_SERVER_IP" ]]; then
              echo "  ‚Ä¢ SSH (public): ssh root@$ATS_SERVER_IP"
            fi
            if [[ -n "$TAILSCALE_IP" ]]; then
              echo "  ‚Ä¢ SSH (Tailscale): ssh root@$TAILSCALE_IP"
              echo "  ‚Ä¢ Game Server (Tailscale): $TAILSCALE_IP:27015"
            fi
            echo "  ‚Ä¢ Game Server (public): ats.7gram.xyz:27015"
            echo "  ‚Ä¢ Web Interface: https://ats.7gram.xyz"
            echo ""
            echo "üîß **Stage Process Completed:**"
            echo "  ‚úÖ Stage 0: Preflight validation on GitHub runner"
            echo "  ‚úÖ Stage 1: Arch Linux setup and Docker installation"
            echo "  ‚úÖ Stage 2: Tailscale OAuth authentication via systemd"
            echo "  ‚úÖ DNS: Cloudflare records updated with Tailscale IP"
            echo "  ‚úÖ Service: ATS game server deployed and running"
            echo ""
            echo "üéÆ **Game Server Info:**"
            echo "  ‚Ä¢ Port: 27015 (TCP/UDP)"
            echo "  ‚Ä¢ Max Players: 8 (configurable)"
            echo "  ‚Ä¢ Game Mode: American Truck Simulator Multiplayer"
            echo "  ‚Ä¢ Cost: \$5/month (reduced from \$40/month for lightweight server)"
            echo ""
            echo "üîß **Next Steps:**"
            echo "  1. Wait 2-5 minutes for DNS propagation"
            echo "  2. Game server will be available shortly"
            echo "  3. Connect using: ats.7gram.xyz:27015"
            echo "  4. Monitor performance via server logs"
            echo ""
          elif [[ "$DEPLOY_RESULT" == "failure" ]]; then
            echo "‚ùå **Deployment Failed**"
            echo "  ‚Ä¢ Check individual job logs for details"
            echo "  ‚Ä¢ Common issues: SSH connectivity, package installation"
            echo "  ‚Ä¢ Retry deployment after resolving issues"
            echo ""
          else
            echo "‚ö†Ô∏è **Deployment Status:** $DEPLOY_RESULT"
            echo "  ‚Ä¢ Check workflow logs for current status"
            echo ""
          fi
          
          echo "‚úÖ **ATS deployment using shared workflow complete!**"
          echo "üìñ For detailed logs, check the shared workflow jobs"
